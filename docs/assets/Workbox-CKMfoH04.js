try{self["workbox:core:7.2.0"]&&_()}catch{}class g{constructor(){this.promise=new Promise((t,e)=>{this.resolve=t,this.reject=e})}}function p(r){r.then(()=>{})}try{self["workbox:window:7.2.0"]&&_()}catch{}function d(r,t){return new Promise(e=>{const s=new MessageChannel;s.port1.onmessage=i=>{e(i.data)},r.postMessage(t,[s.port2])})}class w{constructor(){this._eventListenerRegistry=new Map}addEventListener(t,e){this._getEventListenersByType(t).add(e)}removeEventListener(t,e){this._getEventListenersByType(t).delete(e)}dispatchEvent(t){t.target=this;const e=this._getEventListenersByType(t.type);for(const s of e)s(t)}_getEventListenersByType(t){return this._eventListenerRegistry.has(t)||this._eventListenerRegistry.set(t,new Set),this._eventListenerRegistry.get(t)}}function l(r,t){const{href:e}=location;return new URL(r,e).href===new URL(t,e).href}class a{constructor(t,e){this.type=t,Object.assign(this,e)}}const v=200,f=6e4,u={type:"SKIP_WAITING"};class S extends w{constructor(t,e={}){super(),this._registerOptions={},this._updateFoundCount=0,this._swDeferred=new g,this._activeDeferred=new g,this._controllingDeferred=new g,this._registrationTime=0,this._ownSWs=new Set,this._onUpdateFound=()=>{const s=this._registration,i=s.installing;this._updateFoundCount>0||!l(i.scriptURL,this._scriptURL.toString())||performance.now()>this._registrationTime+f?(this._externalSW=i,s.removeEventListener("updatefound",this._onUpdateFound)):(this._sw=i,this._ownSWs.add(i),this._swDeferred.resolve(i)),++this._updateFoundCount,i.addEventListener("statechange",this._onStateChange)},this._onStateChange=s=>{const i=this._registration,n=s.target,{state:o}=n,h=n===this._externalSW,c={sw:n,isExternal:h,originalEvent:s};!h&&this._isUpdate&&(c.isUpdate=!0),this.dispatchEvent(new a(o,c)),o==="installed"?this._waitingTimeout=self.setTimeout(()=>{o==="installed"&&i.waiting===n&&this.dispatchEvent(new a("waiting",c))},v):o==="activating"&&(clearTimeout(this._waitingTimeout),h||this._activeDeferred.resolve(n))},this._onControllerChange=s=>{const i=this._sw,n=i!==navigator.serviceWorker.controller;this.dispatchEvent(new a("controlling",{isExternal:n,originalEvent:s,sw:i,isUpdate:this._isUpdate})),n||this._controllingDeferred.resolve(i)},this._onMessage=async s=>{const{data:i,ports:n,source:o}=s;await this.getSW(),this._ownSWs.has(o)&&this.dispatchEvent(new a("message",{data:i,originalEvent:s,ports:n,sw:o}))},this._scriptURL=t,this._registerOptions=e,navigator.serviceWorker.addEventListener("message",this._onMessage)}async register({immediate:t=!1}={}){!t&&document.readyState!=="complete"&&await new Promise(s=>window.addEventListener("load",s)),this._isUpdate=!!navigator.serviceWorker.controller,this._compatibleControllingSW=this._getControllingSWIfCompatible(),this._registration=await this._registerScript(),this._compatibleControllingSW&&(this._sw=this._compatibleControllingSW,this._activeDeferred.resolve(this._compatibleControllingSW),this._controllingDeferred.resolve(this._compatibleControllingSW),this._compatibleControllingSW.addEventListener("statechange",this._onStateChange,{once:!0}));const e=this._registration.waiting;return e&&l(e.scriptURL,this._scriptURL.toString())&&(this._sw=e,p(Promise.resolve().then(()=>{this.dispatchEvent(new a("waiting",{sw:e,wasWaitingBeforeRegister:!0}))}))),this._sw&&(this._swDeferred.resolve(this._sw),this._ownSWs.add(this._sw)),this._registration.addEventListener("updatefound",this._onUpdateFound),navigator.serviceWorker.addEventListener("controllerchange",this._onControllerChange),this._registration}async update(){this._registration&&await this._registration.update()}get active(){return this._activeDeferred.promise}get controlling(){return this._controllingDeferred.promise}getSW(){return this._sw!==void 0?Promise.resolve(this._sw):this._swDeferred.promise}async messageSW(t){const e=await this.getSW();return d(e,t)}messageSkipWaiting(){this._registration&&this._registration.waiting&&d(this._registration.waiting,u)}_getControllingSWIfCompatible(){const t=navigator.serviceWorker.controller;if(t&&l(t.scriptURL,this._scriptURL.toString()))return t}async _registerScript(){try{const t=await navigator.serviceWorker.register(this._scriptURL,this._registerOptions);return this._registrationTime=performance.now(),t}catch(t){throw t}}}export{S as Workbox};
